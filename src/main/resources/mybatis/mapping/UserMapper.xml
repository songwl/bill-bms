<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yipeng.bill.bms.dao.UserMapper">
    <cache/>
    <resultMap id="BaseResultMap" type="com.yipeng.bill.bms.domain.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user_id" jdbcType="BIGINT" property="updateUserId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="contact" jdbcType="VARCHAR" property="contact"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="login_count" jdbcType="INTEGER" property="loginCount"/>
        <result column="daili_Role" jdbcType="INTEGER" property="dailiRole"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_name, real_name, password, status, create_user_id, create_time, update_user_id, 
    update_time, contact, qq, phone, last_login_time, login_count,daili_Role
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where user_name = #{userName,jdbcType=VARCHAR}
    </select>
    <select id="selectByPrimaryKeySelective" parameterType="com.yipeng.bill.bms.domain.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where
        <if test="id != null">
            id = #{id,jdbcType=BIGINT}
        </if>
        <if test="password != null">
            AND password = #{password,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="userCreater" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where create_user_id = #{createId,jdbcType=BIGINT}
        ORDER BY user_name ASC
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.yipeng.bill.bms.domain.User" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
    insert into t_user (id, user_name, real_name, 
      password, status, create_user_id, 
      create_time, update_user_id, update_time, 
      contact, qq, phone, 
      last_login_time, login_count,daili_Role)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{contact,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=INTEGER}, #{dailiRole,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.yipeng.bill.bms.domain.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="contact != null">
                contact,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="loginCount != null">
                login_count,
            </if>
            <if test="dailiRole != null">
                daili_Role,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginCount != null">
                #{loginCount,jdbcType=INTEGER},
            </if>
            <if test="dailiRole != null">
                #{dailiRole,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yipeng.bill.bms.domain.User">
        update t_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contact != null">
                contact = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginCount != null">
                login_count = #{loginCount,jdbcType=INTEGER},
            </if>
            <if test="dailiRole != null">
                daili_Role = #{dailiRole,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yipeng.bill.bms.domain.User">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      contact = #{contact,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=INTEGER},
       daili_Role = #{dailiRole,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="getUserListCount" resultType="java.lang.Long">
    select count(*) from
    t_user
  </select>
    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        limit #{1},#{0}
    </select>
    <select id="getQueryUserAll" resultMap="BaseResultMap">
        select a.*
        from t_user a ,t_user_role b
        where a.id=b.user_id
        and b.role_id= #{roleId,jdbcType=BIGINT}
        <if test="searchUserName != null">
            AND a.user_name LIKE CONCAT('%',#{searchUserName,jdbcType=VARCHAR},'%')
        </if>
        <if test="searchState != null">
            AND a.status = #{searchState,jdbcType=BIT}
        </if>
        limit #{offset},#{limit}
    </select>
    <select id="getUserByCreateId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where create_user_id= #{userId,jdbcType=BIGINT}

    </select>

    <select id="getUserRoleByCreateId" resultMap="BaseResultMap">
        select a.*
        from t_user as a ,t_user_role as b
        where a.id=b.user_id
        AND
        a.create_user_id= #{userId,jdbcType=BIGINT}
        <if test="roleId != null">
            AND b.role_id = #{roleId,jdbcType=BIGINT}
        </if>
        <if test="searchUserName != null">
            AND a.user_name LIKE CONCAT('%',#{searchUserName,jdbcType=VARCHAR},'%')
        </if>
        <if test="searchState != null">
            AND a.status = #{searchState,jdbcType=BIT}
        </if>
        <if test="sortName != null">
            <if test="sortName =='userName'">
                ORDER BY a.user_name ${sortOrder}
            </if>
            <if test="sortName =='realName'">
                ORDER BY a.real_name ${sortOrder}
            </if>
            <if test="sortName =='createTime'">
                ORDER BY a.create_time ${sortOrder}
            </if>
        </if>
        limit #{offset},#{limit}
    </select>

    <select id="getUserRoleByCreateIdCount" resultType="java.lang.Long">
        select count(a.id)
        from t_user as a ,t_user_role as b
        where a.id=b.user_id
        AND
        a.create_user_id= #{userId,jdbcType=BIGINT}
        <if test="roleId != null">
            AND b.role_id = #{roleId,jdbcType=BIGINT}
        </if>
        <if test="searchUserName != null">
            AND a.user_name LIKE CONCAT('%',#{searchUserName,jdbcType=VARCHAR},'%')
        </if>
        <if test="searchState != null">
            AND a.status = #{searchState,jdbcType=BIT}
        </if>

    </select>

    <select id="getUserBillAscription" resultMap="BaseResultMap">
        select DISTINCT a.*
        from t_user as a ,t_bill as b,t_bill_price as d
        where b.id=d.bill_id and a.id= d.out_member_id
        AND
        b.bill_ascription= #{ascription,jdbcType=BIGINT}
        AND
        d.in_member_id= #{inMemberId,jdbcType=BIGINT}
        <if test="searchUserName != null">
            AND a.user_name LIKE CONCAT('%',#{searchUserName,jdbcType=VARCHAR},'%')
        </if>
        <if test="searchState != null">
            AND a.status = #{searchState,jdbcType=BIT}
        </if>
        limit #{offset},#{limit}
    </select>

    <select id="getUserBillAscriptionCount" resultType="java.lang.Long">
        select COUNT(DISTINCT (a.id))
        from t_user as a ,t_bill as b,t_bill_price as d
        where b.id=d.bill_id and a.id= d.out_member_id
        AND
        b.bill_ascription= #{ascription,jdbcType=BIGINT}
        AND
        d.in_member_id= #{inMemberId,jdbcType=BIGINT}
        <if test="searchUserName != null">
            AND a.user_name LIKE CONCAT('%',#{searchUserName,jdbcType=VARCHAR},'%')
        </if>
        <if test="searchState != null">
            AND a.status = #{searchState,jdbcType=BIT}
        </if>
    </select>

    <select id="getSearchUserBillAscription" resultMap="BaseResultMap">
        select DISTINCT a.*
        from t_user as a ,t_bill as b,t_bill_price as d
        where b.id=d.bill_id and a.id= d.out_member_id
        AND
        b.bill_ascription= #{ascription,jdbcType=BIGINT}
        AND
        d.in_member_id= #{inMemberId,jdbcType=BIGINT}
        <if test="searchUserName != null">
            AND a.user_name LIKE CONCAT('%',#{searchUserName,jdbcType=VARCHAR},'%')
        </if>
        <if test="searchState != null">
            AND a.status = #{searchState,jdbcType=BIT}
        </if>
    </select>

    <select id="selectByReviewUser" resultMap="BaseResultMap">
    select b.* from t_user_role as a,t_user as b
    where 1=1
    and   a.user_id=b.id
    and a.role_id=4
    and b.status=0
    limit #{offset},#{limit}
  </select>
    <select id="selectByReviewUserCount" resultType="java.lang.Long">
    select COUNT(a.id) from t_user_role as a,t_user as b
    where 1=1
    and   a.user_id=b.id
    and a.role_id=4
    and b.status=0
  </select>
    <select id="selectAllUsers" resultMap="BaseResultMap">
    select u.* from t_user as u ,t_user_role as ur
    where u.id = ur.user_id and ur.role_id=#{role,jdbcType=VARCHAR}
  </select>
    <select id="selectAddressee" resultMap="BaseResultMap">
    select * from t_user
    where create_user_id=#{currentid,jdbcType=VARCHAR}
  </select>
    <select id="selectDistributor" resultMap="BaseResultMap">
    select u.* from t_user as u,offerset as o ,t_user_role as ur
    where u.id=o.userId and u.id=ur.user_id and ur.role_id=4 and o.leasePower=1
  </select>
    <select id="selectRoleName" resultType="java.lang.String">
    select r.role_code from t_role as r,t_user as u,t_user_role as ur
    where r.id=ur.role_id and u.id=ur.user_id and u.id=#{currentId,jdbcType=VARCHAR}
  </select>
</mapper>