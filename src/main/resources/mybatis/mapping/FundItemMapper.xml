<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yipeng.bill.bms.dao.FundItemMapper">
  <resultMap id="BaseResultMap" type="com.yipeng.bill.bms.domain.FundItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fund_account_id" jdbcType="BIGINT" property="fundAccountId" />
    <result column="change_amount" jdbcType="DECIMAL" property="changeAmount" />
    <result column="change_time" jdbcType="TIMESTAMP" property="changeTime" />
    <result column="item_type" jdbcType="VARCHAR" property="itemType" />
  </resultMap>

  <resultMap id="BaseResultMap1" type="com.yipeng.bill.bms.model.FundItemSum">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="fund_account_id" jdbcType="BIGINT" property="fundAccountId" />
    <result column="change_amount" jdbcType="DECIMAL" property="changeAmount" />
    <result column="change_time" jdbcType="TIMESTAMP" property="changeTime" />
    <result column="item_type" jdbcType="VARCHAR" property="itemType" />
    <result column="dayAccountSum" jdbcType="DECIMAL" property="dayAccountSum" />
  </resultMap>

  <sql id="Base_Column_List">
    id, fund_account_id, change_amount,balance, change_time, item_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_fund_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_fund_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yipeng.bill.bms.domain.FundItem" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert ignore into t_fund_item (id, fund_account_id, change_amount,balance,
      change_time, item_type)
    values (#{id,jdbcType=BIGINT}, #{fundAccountId,jdbcType=BIGINT}, #{changeAmount,jdbcType=DECIMAL},#{balance,jdbcType=DECIMAL},
      #{changeTime,jdbcType=TIMESTAMP}, #{itemType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yipeng.bill.bms.domain.FundItem">
    insert into t_fund_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fundAccountId != null">
        fund_account_id,
      </if>
      <if test="changeAmount != null">
        change_amount,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="changeTime != null">
        change_time,
      </if>
      <if test="itemType != null">
        item_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fundAccountId != null">
        #{fundAccountId,jdbcType=BIGINT},
      </if>
      <if test="changeAmount != null">
        #{changeAmount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="changeTime != null">
        #{changeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemType != null">
        #{itemType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yipeng.bill.bms.domain.FundItem">
    update t_fund_item
    <set>
      <if test="fundAccountId != null">
        fund_account_id = #{fundAccountId,jdbcType=BIGINT},
      </if>
      <if test="changeAmount != null">
        change_amount = #{changeAmount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        balance= #{balance,jdbcType=DECIMAL},
      </if>
      <if test="changeTime != null">
        change_time = #{changeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemType != null">
        item_type = #{itemType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yipeng.bill.bms.domain.FundItem">
    update t_fund_item
    set fund_account_id = #{fundAccountId,jdbcType=BIGINT},
      change_amount = #{changeAmount,jdbcType=DECIMAL},
       balance= #{balance,jdbcType=DECIMAL},
      change_time = #{changeTime,jdbcType=TIMESTAMP},
      item_type = #{itemType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!--管理员查看资金流水-->
  <select id="selectByAdmin"   resultMap="BaseResultMap1">
   SELECT a.* from t_fund_item as a,t_fund_account as b,t_user_role as c
    where a.fund_account_id=b.id
     and b.user_id=c.user_id
     and c.role_id=#{roleId,jdbcType=BIGINT}
     ORDER BY a.change_time DESC
    limit #{offset},#{limit}
  </select>
  <select id="selectByAdminCount"   resultType="java.lang.Long">
    SELECT COUNT(a.id) from t_fund_item as a,t_fund_account as b,t_user_role as c
    where a.fund_account_id=b.id
    and b.user_id=c.user_id
    and c.role_id=#{roleId,jdbcType=BIGINT}
  </select>
  <!--end管理员查看资金流水-->
  <!--专员查看资金流水-->
  <select id="selectByZhuanYuan"   resultMap="BaseResultMap1">
   SELECT  DISTINCT a.* from t_fund_item as a,t_fund_account as b,t_user_role as c,t_bill_price as d,t_bill as e
    where a.fund_account_id=b.id
     and b.user_id=c.user_id
     and b.user_id=d.out_member_id
     and d.bill_id=e.id
     and c.role_id=#{roleId,jdbcType=BIGINT}
     and e.bill_ascription=#{userId,jdbcType=BIGINT}
    <if test="sortName != null">
      <if test="sortName =='itemType'">
        ORDER BY a.item_type ${sortOrder}
      </if>
      <if test="sortName =='changeTime'">
        ORDER BY a.change_time ${sortOrder}
      </if>
    </if>
/*    ORDER BY a.change_time DESC*/
    limit #{offset},#{limit}
  </select>
  <select id="selectByZhuanYuanCount"   resultType="java.lang.Long">
   SELECT COUNT(DISTINCT a.id)  from t_fund_item as a,t_fund_account as b,t_user_role as c,t_bill_price as d,t_bill as e
    where a.fund_account_id=b.id
     and b.user_id=c.user_id
     and b.user_id=d.out_member_id
     and d.bill_id=e.id
     and c.role_id=#{roleId,jdbcType=BIGINT}
     and e.bill_ascription=#{userId,jdbcType=BIGINT}
  </select>
  <!--end专员查看资金流水-->

  <!--渠道商和代理商查看资金流水-->
  <select id="selectByDAgent"   resultMap="BaseResultMap1">
    SELECT a.* from
     t_fund_item as a,t_fund_account as b,t_user as c
    where a.fund_account_id=b.id
    and b.user_id=c.id
    and c.create_user_id=#{createId,jdbcType=BIGINT}
    ORDER BY a.change_time DESC
    limit #{offset},#{limit}
  </select>
  <select id="selectByDAgentCount"   resultType="java.lang.Long">
    SELECT COUNT(a.id) from
    t_fund_item as a,t_fund_account as b,t_user as c
    where a.fund_account_id=b.id
    and b.user_id=c.id
    and c.create_user_id=#{createId,jdbcType=BIGINT}
  </select>
  <!--end渠道商和代理商查看资金流水-->

  <!--客户查看资金流水-->
  <select id="selectByCustomer"   resultMap="BaseResultMap1">
    SELECT a.*  from
    t_fund_item as a,t_fund_account as b
    where a.fund_account_id=b.id
    and b.user_id=#{userId,jdbcType=BIGINT}
    ORDER BY change_time DESC
    limit #{offset},#{limit}
  </select>

  <select id="selectByCustomerCount"  resultType="java.lang.Long">
  SELECT COUNT(a.id) from
  t_fund_item as a,t_fund_account as b
  where a.fund_account_id=b.id
  and b.user_id=#{userId,jdbcType=BIGINT}
  </select>
  <!--end客户查看资金流水-->


  <select id="selectByItemPriceId"  resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from t_fund_item
    where
     priceId=#{priceId,jdbcType=BIGINT}
    and year(change_time)=#{year,jdbcType=INTEGER}
    and month(change_time)=#{month,jdbcType=INTEGER}
    and DAY(change_time) = #{day,jdbcType=INTEGER}
  </select>

  <select id="selectByMaxId"    resultType="java.lang.Long">
    SELECT MAX(id)  from
    t_fund_item as a
    where  a.fund_account_id=#{fundAccountId,jdbcType=BIGINT}
  </select>

  <select id="selectByDayFunItem"  resultMap="BaseResultMap">
  SELECT
  <include refid="Base_Column_List" />
  from t_fund_item
  where
  fund_account_id=#{fundAccountId,jdbcType=BIGINT}
  and year(change_time)=#{year,jdbcType=INTEGER}
  and month(change_time)=#{month,jdbcType=INTEGER}
  and DAY(change_time) = #{day,jdbcType=INTEGER}
  and item_type = #{itemType,jdbcType=VARCHAR}
  </select>

  <select id="selectByUserIdItemType"   resultType="java.lang.Double">
  SELECT IFNULL(SUM(a.change_amount),0) from t_fund_item as a,t_fund_account as b
  where a.fund_account_id=b.id
  and a.item_type=#{itemType,jdbcType=VARCHAR}
  and b.user_id=#{userId,jdbcType=BIGINT}
  </select>
</mapper>