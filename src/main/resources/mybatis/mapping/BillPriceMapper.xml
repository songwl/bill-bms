<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yipeng.bill.bms.dao.BillPriceMapper">
  <resultMap id="BaseResultMap" type="com.yipeng.bill.bms.domain.BillPrice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bill_id" jdbcType="BIGINT" property="billId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="in_member_id" jdbcType="BIGINT" property="inMemberId" />
    <result column="out_member_id" jdbcType="BIGINT" property="outMemberId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, bill_id, price,bill_ranking_standard ,in_member_id, out_member_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_bill_price
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_bill_price
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByBillId" parameterType="java.lang.Long">
    delete from t_bill_price
    where bill_id = #{billId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yipeng.bill.bms.domain.BillPrice">
    insert into t_bill_price (id, bill_id, price, bill_ranking_standard,
      in_member_id, out_member_id, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{billId,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL},#{billRankingStandard,jdbcType=BIGINT},
      #{inMemberId,jdbcType=BIGINT}, #{outMemberId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yipeng.bill.bms.domain.BillPrice">
    insert into t_bill_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="billId != null">
        bill_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inMemberId != null">
        in_member_id,
      </if>
      <if test="outMemberId != null">
        out_member_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="billId != null">
        #{billId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="billRankingStandard != null">
        #{billRankingStandard,jdbcType=BIGINT},
      </if>
      <if test="inMemberId != null">
        #{inMemberId,jdbcType=BIGINT},
      </if>
      <if test="outMemberId != null">
        #{outMemberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yipeng.bill.bms.domain.BillPrice">
    update t_bill_price
    <set>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="billRankingStandard != null">
        bill_ranking_standard=  #{billRankingStandard,jdbcType=BIGINT},
      </if>
      <if test="inMemberId != null">
        in_member_id = #{inMemberId,jdbcType=BIGINT},
      </if>
      <if test="outMemberId != null">
        out_member_id = #{outMemberId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yipeng.bill.bms.domain.BillPrice">
    update t_bill_price
    set bill_id = #{billId,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      bill_ranking_standard= #{billRankingStandard,jdbcType=BIGINT},
      in_member_id = #{inMemberId,jdbcType=BIGINT},
      out_member_id = #{outMemberId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByBillId"   resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_bill_price
    where bill_id = #{BillId,jdbcType=BIGINT}
  </select>
  <select id="selectByBillPrice" parameterType="com.yipeng.bill.bms.domain.BillPrice" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_bill_price
    where 1=1
    <if test="billId != null">
      AND bill_id = #{billId,jdbcType=BIGINT}
    </if>
    <if test="price != null">
     AND  price = #{price,jdbcType=DECIMAL}
    </if>
    <if test="billRankingStandard != null">
    AND  #{billRankingStandard,jdbcType=BIGINT}
    </if>
    <if test="inMemberId != null">
    AND  in_member_id = #{inMemberId,jdbcType=BIGINT}
    </if>
    <if test="outMemberId != null">
     AND out_member_id = #{outMemberId,jdbcType=BIGINT}
    </if>
    <if test="createTime != null">
    AND  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
  </select>
  <select id="selectBillCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
    SELECT COUNT(DISTINCT(bill_id))
     from t_bill_price
     where t_bill_price.out_member_id=#{userId,jdbcType=BIGINT}
  </select>
  <select id="selectByBillPriceOutMemberId" parameterType="com.yipeng.bill.bms.domain.BillPrice" resultType="java.lang.Long">
    select
    DISTINCT out_member_id
    from t_bill_price
    where 1=1
    <if test="billId != null">
      AND bill_id = #{billId,jdbcType=BIGINT}
    </if>
    <if test="price != null">
      AND  price = #{price,jdbcType=DECIMAL}
    </if>
    <if test="billRankingStandard != null">
      AND  #{billRankingStandard,jdbcType=BIGINT}
    </if>
    <if test="inMemberId != null">
      AND  in_member_id = #{inMemberId,jdbcType=BIGINT}
    </if>
    <if test="outMemberId != null">
      AND out_member_id = #{outMemberId,jdbcType=BIGINT}
    </if>
    <if test="createTime != null">
      AND  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
  </select>

  <select id="selectByBillPriceSingle" parameterType="com.yipeng.bill.bms.domain.BillPrice" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_bill_price
    where 1=1
    <if test="billId != null">
      AND bill_id = #{billId,jdbcType=BIGINT}
    </if>
    <if test="price != null">
      AND  price = #{price,jdbcType=DECIMAL}
    </if>
    <if test="billRankingStandard != null">
      AND  #{billRankingStandard,jdbcType=BIGINT}
    </if>
    <if test="inMemberId != null">
      AND  in_member_id = #{inMemberId,jdbcType=BIGINT}
    </if>
    <if test="outMemberId != null">
      AND out_member_id = #{outMemberId,jdbcType=BIGINT}
    </if>
    <if test="createTime != null">
      AND  create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
  </select>
  <select id="selectByBillPriceList"  resultMap="BaseResultMap">
    select DISTINCT b.*
    from t_bill as a,t_bill_price as b,t_bill_search_support as d,t_user_role as e
    where a.id=b.bill_id  AND  a.id=d.bill_id AND b.in_member_id=e.user_id
    AND a.state=#{state,jdbcType=BIGINT}
    AND b.in_member_id=#{userId,jdbcType=BIGINT}
    <if test="website!= null">
      AND a.website =#{website,jdbcType=VARCHAR}
    </if>
    <if test="keywords!= null">
      AND a.keywords =#{keywords,jdbcType=VARCHAR}
    </if>
    <if test="searchName != null">
      AND  d.search_support= #{searchName,jdbcType=VARCHAR}
    </if>
    <if test="billAscription != null">
      AND  a.bill_ascription= #{billAscription,jdbcType=BIGINT}
    </if>
  </select>

  <select id="selectByOutmemberList"  resultMap="BaseResultMap">
  SELECT DISTINCT(b.out_member_id) from t_bill_cost as a,t_bill_price as b
  WHERE a.t_bill_price_id=b.id
  </select>
</mapper>